{"version":3,"file":"static/js/484.78db7da0.chunk.js","mappings":"sIAgEA,UA7DA,SAAkBA,GAChB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA0Bb,EAAAA,EAAAA,UAAS,GAAEc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA9BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA8BjB,EAAAA,EAAAA,WAAS,GAAMkB,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAAkCrB,EAAAA,EAAAA,UAAS,IAAGsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAkB9B,OACEG,EAAAA,EAAAA,MAAA,QAAMC,SAjBa,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EAAW,CACf1B,KAAMA,EACNI,KAAMA,EACNI,MAAOA,EACPI,MAAOA,EACPI,QAASA,EACTI,UAAWA,GAEbzB,EAAMgC,SAASD,EACjB,EAM+BE,SAAA,EAC3BN,EAAAA,EAAAA,MAAA,SAAAM,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAO/B,EAAMgC,SAAU,SAACC,GAAC,OAAKhC,EAAQgC,EAAEC,OAAOH,MAAM,QAE1EF,EAAAA,EAAAA,KAAA,UACAP,EAAAA,EAAAA,MAAA,SAAAM,SAAA,CAAO,SAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAO3B,EAAM4B,SAAU,SAACC,GAAC,OAAK5B,EAAQ4B,EAAEC,OAAOH,MAAM,QAE1EF,EAAAA,EAAAA,KAAA,UACAP,EAAAA,EAAAA,MAAA,SAAAM,SAAA,CAAO,UAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAOvB,EAAOwB,SAAU,SAACC,GAAC,OAAKxB,EAASwB,EAAEC,OAAOH,MAAM,QAE5EF,EAAAA,EAAAA,KAAA,UACAP,EAAAA,EAAAA,MAAA,SAAAM,SAAA,CAAO,UAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,SAASC,MAAOnB,EAAOoB,SAAU,SAACC,GAAC,OAAKpB,EAASoB,EAAEC,OAAOH,MAAM,QAE9EF,EAAAA,EAAAA,KAAA,UACAP,EAAAA,EAAAA,MAAA,SAAAM,SAAA,CAAO,aAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,WAAWK,QAASnB,EAASgB,SAAU,SAACC,GAAC,OAAKhB,EAAWgB,EAAEC,OAAOC,QAAQ,QAExFN,EAAAA,EAAAA,KAAA,UACAP,EAAAA,EAAAA,MAAA,SAAAM,SAAA,CAAO,eAELC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAOX,EAAWY,SAAU,SAACC,GAAC,OAAKZ,EAAaY,EAAEC,OAAOH,MAAM,QAEpFF,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,kBAG5B,C","sources":["views/brands/addBrand/AddBrand.js"],"sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nfunction AddBrand(props) {\n  const [name, setName] = useState('')\n  const [code, setCode] = useState('')\n  const [brand, setBrand] = useState('')\n  const [price, setPrice] = useState(0)\n  const [inStock, setInStock] = useState(false)\n  const [createdOn, setCreatedOn] = useState('')\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newBrand = {\n      name: name,\n      code: code,\n      brand: brand,\n      price: price,\n      inStock: inStock,\n      createdOn: createdOn,\n    }\n    props.addBrand(newBrand)\n  }\n  AddBrand.propTypes = {\n    addBrand: PropTypes.func.isRequired,\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name:\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Code:\n        <input type=\"text\" value={code} onChange={(e) => setCode(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Brand:\n        <input type=\"text\" value={brand} onChange={(e) => setBrand(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        Price:\n        <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} />\n      </label>\n      <br />\n      <label>\n        In Stock:\n        <input type=\"checkbox\" checked={inStock} onChange={(e) => setInStock(e.target.checked)} />\n      </label>\n      <br />\n      <label>\n        Created On:\n        <input type=\"text\" value={createdOn} onChange={(e) => setCreatedOn(e.target.value)} />\n      </label>\n      <br />\n      <button type=\"submit\">Add Product</button>\n    </form>\n  )\n}\n\nexport default AddBrand\n"],"names":["props","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","code","setCode","_useState5","_useState6","brand","setBrand","_useState7","_useState8","price","setPrice","_useState9","_useState10","inStock","setInStock","_useState11","_useState12","createdOn","setCreatedOn","_jsxs","onSubmit","event","preventDefault","newBrand","addBrand","children","_jsx","type","value","onChange","e","target","checked"],"sourceRoot":""}