{"version":3,"file":"static/js/674.c6787cf2.chunk.js","mappings":"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","sources":["views/products/productList/Products.js"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport MaterialReactTable from 'material-react-table'\nimport * as Yup from 'yup'\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  Stack,\n  TextField,\n  Tooltip,\n  FormControl,\n  FormHelperText,\n  MenuItem,\n  Select,\n  InputLabel,\n} from '@mui/material'\nimport {\n  CToast,\n  CToastClose,\n  CToastBody,\n  CButton,\n  CModalFooter,\n  CModalBody,\n  CModalTitle,\n  CModalHeader,\n  CModal,\n} from '@coreui/react'\nimport { Delete, Edit, Visibility, VerticalAlignBottom } from '@mui/icons-material'\nimport PropTypes from 'prop-types'\nimport { useNavigate } from 'react-router-dom'\nimport jsPDF from 'jspdf'\nimport 'jspdf-autotable'\n\nconst Products = () => {\n  const [createModalOpen, setCreateModalOpen] = useState(false)\n  const [tableData, setTableData] = useState([])\n  const [validationErrors, setValidationErrors] = useState({})\n  const [isSuccessToastOpen, setIsSuccessToastOpen] = useState(false)\n  const [isSuccess, setIsSuccess] = useState(false)\n  const navigate = useNavigate()\n\n  function handleViewDetails(row) {\n    const newCondition = row.original.condition\n    const Id = row.original.id\n    const Name = row.original.name\n    const Code = row.original.code\n    const Brand = row.original.brand\n    const Price = row.original.price\n    const InStock = row.original.inStock\n    const Warranty = row.original.warranty\n    navigate(`/products/productState`, {\n      state: {\n        condition: newCondition,\n        id: Id,\n        name: Name,\n        code: Code,\n        brand: Brand,\n        price: Price,\n        inStock: InStock,\n        warranty: Warranty,\n      },\n    })\n  }\n  const fetchData = useCallback(async () => {\n    try {\n      const response = await fetch('http://localhost:8080/products/all', {\n        method: 'GET',\n      })\n      if (response.ok) {\n        const data = await response.json()\n        setTableData(data)\n      } else {\n        console.error('Failed to fetch data from the Oracle database')\n      }\n    } catch (error) {\n      console.error('Error occurred while fetching data:', error)\n    }\n  }, [])\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required'),\n    code: Yup.string().required('Code is required'),\n    brand: Yup.string().required('Brand is required'),\n    price: Yup.number().typeError('Price must be a number').required('Price is required'),\n    inStock: Yup.number().typeError('Quantity must be a number').required('Quantity is required'),\n    warranty: Yup.string().required('Warranty is required'),\n    condition: Yup.string().required('Condition is required'),\n  })\n  const [setHasErrors] = useState(false)\n  const handleCreateNewRow = async (values) => {\n    try {\n      await validationSchema.validate(values, { abortEarly: false })\n      const response = await fetch('http://localhost:8080/products/add', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(values),\n      })\n      if (response.ok) {\n        const text = await response.text()\n        const newProduct = text ? JSON.parse(text) : {}\n        const newTableData = [...tableData, newProduct]\n        setTableData(newTableData)\n        setCreateModalOpen(false)\n        fetchData()\n      } else {\n        setHasErrors(true)\n      }\n    } catch (error) {\n      console.error('Error occurred while creating a new row:', error)\n      console.log(error)\n    }\n  }\n\n  const handleSuccessToastClose = () => {\n    setIsSuccess(false)\n  }\n  const handleSaveRowEdits = async ({ exitEditingMode, row, values }) => {\n    if (!Object.keys(validationErrors).length) {\n      try {\n        const response = await fetch(`http://localhost:8080/products/update/${row.original.name}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify(values),\n        })\n        if (response.ok) {\n          tableData[row.index] = values\n          setTableData([...tableData])\n          exitEditingMode()\n          setIsSuccess(true)\n        } else {\n          console.error('Failed to save row edits')\n        }\n      } catch (error) {\n        console.error('Error occurred while saving row edits:', error)\n      }\n    }\n  }\n  const [selectedRow, setSelectedRow] = useState(null)\n  const [visible, setVisible] = useState(false)\n  const handleDeleteRow = useCallback(async () => {\n    if (selectedRow) {\n      try {\n        const response = await fetch(\n          `http://localhost:8080/products/delete/${selectedRow.original.name}`,\n          {\n            method: 'DELETE',\n          },\n        )\n        if (response.ok) {\n          tableData.splice(selectedRow.index, 1)\n          setTableData([...tableData])\n          showDeleteToast()\n          setVisible(false)\n        } else {\n          console.error('Failed to delete a row')\n        }\n      } catch (error) {\n        console.error('Error occurred while deleting a row:', error)\n      }\n    }\n  }, [selectedRow, tableData])\n  const generateQRCodeData = (product) => {\n    const { id, name, code, brand, price, inStock, warranty, condition } = product\n    const qrData = [\n      { label: 'ID', value: id },\n      { label: 'Name', value: name },\n      { label: 'Code', value: code },\n      { label: 'Brand', value: brand },\n      { label: 'Price', value: price },\n      { label: 'In Stock', value: inStock },\n      { label: 'Warranty', value: warranty },\n      { label: 'Condition', value: condition },\n    ]\n    return qrData\n  }\n  const downloadQRCode = (product) => {\n    const qrData = generateQRCodeData(product)\n    const pdf = new jsPDF()\n    const columns = ['Label', 'Value']\n    const rows = qrData.map((data) => [data.label, data.value])\n    pdf.autoTable({\n      head: [columns],\n      body: rows,\n      startY: 10,\n    })\n    pdf.save(`${product.name}_qr_code.pdf`)\n  }\n  const showDeleteToast = () => {\n    setIsSuccessToastOpen(true)\n  }\n\n  const handleDeleteToastClose = () => {\n    setIsSuccessToastOpen(false)\n  }\n  CreateNewAccountModal.propTypes = {\n    open: PropTypes.bool.isRequired,\n    columns: PropTypes.array.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n  const handleCancelRowEdits = () => {\n    setValidationErrors({})\n  }\n  const getCommonEditTextFieldProps = useCallback(\n    (cell) => {\n      return {\n        error: !!validationErrors[cell.id],\n        helperText: validationErrors[cell.id],\n        onBlur: (event) => {\n          const isValid =\n            cell.column.id === 'email'\n              ? validateEmail(event.target.value)\n              : cell.column.id === 'age'\n              ? validateAge(+event.target.value)\n              : validateRequired(event.target.value)\n          if (!isValid) {\n            setValidationErrors({\n              ...validationErrors,\n              [cell.id]: `${cell.column.columnDef.header} is required`,\n            })\n          } else {\n            delete validationErrors[cell.id]\n            setValidationErrors({\n              ...validationErrors,\n            })\n          }\n        },\n      }\n    },\n    [validationErrors],\n  )\n  const columns = useMemo(\n    () => [\n      {\n        accessorKey: 'id',\n        header: 'ID',\n        enableColumnOrdering: true,\n        enableEditing: false,\n        enableSorting: true,\n        size: 80,\n      },\n      {\n        accessorKey: 'name',\n        header: 'NAME',\n        size: 140,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: 'string',\n        }),\n        render: ({ row }) => (\n          <a\n            href={`/products/productState`}\n            onClick={(e) => {\n              e.preventDefault()\n              navigate(`/products/productState`, { state: row.original })\n            }}\n          >\n            {row.original.name}\n          </a>\n        ),\n      },\n      {\n        accessorKey: 'code',\n        header: 'CODE',\n        size: 140,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: 'string',\n        }),\n      },\n      {\n        accessorKey: 'brand',\n        header: 'BRAND',\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: 'string',\n        }),\n      },\n      {\n        accessorKey: 'price',\n        header: 'PRICE(DH)',\n        size: 80,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: 'number',\n        }),\n      },\n      {\n        accessorKey: 'inStock',\n        header: 'QUANTITY',\n        size: 80,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: 'number',\n        }),\n      },\n      {\n        accessorKey: 'warranty',\n        header: 'WARRANTY',\n        size: 80,\n        enableEditing: false,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: 'string',\n        }),\n      },\n      {\n        accessorKey: 'condition',\n        header: 'CONDITION',\n        size: 80,\n        muiTableBodyCellEditTextFieldProps: ({ cell }) => ({\n          ...getCommonEditTextFieldProps(cell),\n          type: 'string',\n        }),\n      },\n    ],\n    [getCommonEditTextFieldProps, navigate],\n  )\n  return (\n    <>\n      <CToast\n        autohide={true}\n        visible={isSuccessToastOpen}\n        color=\"success\"\n        className=\"text-white align-items-center\"\n        style={{ position: 'fixed', right: '20px', top: '70px', zIndex: '10000' }}\n        onClose={handleDeleteToastClose}\n      >\n        <div className=\"d-flex\">\n          <CToastBody>Row deleted successfully!</CToastBody>\n          <CToastClose className=\"me-2 m-auto\" onClick={handleDeleteToastClose} />\n        </div>\n      </CToast>\n      {isSuccess && (\n        <CToast\n          autohide={true}\n          visible={true}\n          color=\"success\"\n          className=\"text-white align-items-center\"\n          style={{ position: 'fixed', right: '20px', top: '70px', zIndex: '10000' }}\n          onClose={handleSuccessToastClose}\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Data submitted successfully.</CToastBody>\n            <CToastClose className=\"me-2 m-auto\" white />\n          </div>\n        </CToast>\n      )}\n\n      <MaterialReactTable\n        displayColumnDefOptions={{\n          'mrt-row-actions': {\n            muiTableHeadCellProps: {\n              align: 'center',\n            },\n            size: 120,\n          },\n        }}\n        columns={columns}\n        data={tableData}\n        editingMode=\"modal\"\n        enableColumnOrdering\n        enableEditing\n        onEditingRowSave={handleSaveRowEdits}\n        onEditingRowCancel={handleCancelRowEdits}\n        renderRowActions={({ row, table }) => (\n          <Box sx={{ display: 'flex', gap: '1rem' }}>\n            <Tooltip arrow placement=\"bottom\" title=\"Edit\">\n              <IconButton onClick={() => table.setEditingRow(row)}>\n                <Edit />\n              </IconButton>\n            </Tooltip>\n            <Tooltip arrow placement=\"bottom\" title=\"View Details\">\n              <IconButton color=\"primary\" onClick={() => handleViewDetails(row)}>\n                <Visibility />\n              </IconButton>\n            </Tooltip>\n            <Tooltip arrow placement=\"bottom\" title=\"Delete\">\n              <IconButton\n                color=\"error\"\n                onClick={() => {\n                  setSelectedRow(row)\n                  setVisible(true)\n                }}\n              >\n                <Delete />\n              </IconButton>\n            </Tooltip>\n            <Tooltip arrow placement=\"bottom\" title=\"Download Data\">\n              <IconButton color=\"info\" onClick={() => downloadQRCode(row.original)}>\n                <VerticalAlignBottom />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        )}\n        renderTopToolbarCustomActions={() => (\n          <Button color=\"info\" onClick={() => setCreateModalOpen(true)} variant=\"contained\">\n            Create New Product\n          </Button>\n        )}\n      />\n      <CreateNewAccountModal\n        columns={columns}\n        open={createModalOpen}\n        onClose={() => setCreateModalOpen(false)}\n        onSubmit={handleCreateNewRow}\n      />\n      <CModal backdrop=\"static\" visible={visible} onClose={() => setVisible(false)}>\n        <CModalHeader>\n          <CModalTitle>Modal title</CModalTitle>\n        </CModalHeader>\n        <CModalBody>I will not close if you click outside my.</CModalBody>\n        <CModalFooter>\n          <CButton color=\"secondary\" onClick={() => setVisible(false)}>\n            Close\n          </CButton>\n          <CButton color=\"primary\" onClick={handleDeleteRow}>\n            Save changes\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  )\n}\n\nexport const CreateNewAccountModal = ({ open, columns, onClose, onSubmit }) => {\n  const [values, setValues] = useState(() =>\n    columns.reduce((acc, column) => {\n      acc[column.accessorKey ?? ''] = ''\n      return acc\n    }, {}),\n  )\n  const [brands, setBrands] = useState([])\n  useEffect(() => {\n    fetch('http://localhost:8080/brands/all')\n      .then((response) => response.json())\n      .then((data) => setBrands(data))\n      .catch((error) => console.error('Error fetching brands:', error))\n  }, [])\n  const [isSuccess, setIsSuccess] = useState(false)\n  const [hasErrors, setHasErrors] = useState(false)\n  const handleSubmit = async () => {\n    const errors = {}\n    columns.forEach((column) => {\n      if (column.accessorKey !== 'id' && !values[column.accessorKey]) {\n        errors[column.accessorKey] = 'Field required'\n      } else if (\n        ['inStock', 'price'].includes(column.accessorKey) &&\n        isNaN(Number(values[column.accessorKey]))\n      ) {\n        errors[column.accessorKey] = 'Must be a number'\n      } else if (\n        ['name', 'code', 'brand', 'condition'].includes(column.accessorKey) &&\n        !/^[A-Za-z0-9- ]+$/.test(values[column.accessorKey])\n      ) {\n        errors[column.accessorKey] = 'Must contain only letters and spaces'\n      }\n    })\n    setValidationErrors(errors)\n    if (Object.keys(errors).length === 0) {\n      await onSubmit(values)\n      onClose()\n      setIsSuccess(true)\n      setValues(\n        columns.reduce((acc, column) => {\n          acc[column.accessorKey ?? ''] = ''\n          return acc\n        }, {}),\n      )\n    } else {\n      setHasErrors(true)\n    }\n  }\n  const [validationErrors, setValidationErrors] = useState({})\n  const handleSuccessToastClose = () => {\n    setIsSuccess(false)\n  }\n  const handleErrorToastClose = () => {\n    setHasErrors(false)\n  }\n  return (\n    <>\n      {isSuccess && (\n        <CToast\n          autohide={true}\n          visible={true}\n          color=\"success\"\n          className=\"text-white align-items-center\"\n          style={{ position: 'fixed', right: '20px', top: '70px', zIndex: '10000' }}\n          onClose={handleSuccessToastClose}\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Data submitted successfully.</CToastBody>\n            <CToastClose className=\"me-2 m-auto\" white />\n          </div>\n        </CToast>\n      )}\n      {hasErrors && (\n        <CToast\n          autohide={true}\n          visible={true}\n          className=\"text-white align-items-center\"\n          style={{ position: 'fixed', right: '20px', top: '70px', zIndex: '10000' }}\n          color=\"danger\"\n          onClose={handleErrorToastClose}\n        >\n          <div className=\"d-flex\">\n            <CToastBody>Please fix all the errors</CToastBody>\n            <CToastClose className=\"me-2 m-auto\" white />\n          </div>\n        </CToast>\n      )}\n      <Dialog open={open}>\n        <DialogTitle textAlign=\"center\">Create New Product</DialogTitle>\n        <DialogContent>\n          <form onSubmit={(e) => e.preventDefault()}>\n            <Stack\n              sx={{\n                width: '100%',\n                minWidth: { xs: '300px', sm: '360px', md: '400px' },\n                gap: '1.5rem',\n              }}\n            >\n              {columns\n                .filter((column) => column.accessorKey !== 'id')\n                .map((column) => (\n                  <FormControl\n                    key={column.accessorKey}\n                    error={!!validationErrors[column.accessorKey]}\n                  >\n                    {column.accessorKey === 'condition' ? (\n                      <FormControl fullWidth>\n                        <InputLabel>SELECT CONDITION</InputLabel>\n                        <Select\n                          value={values[column.accessorKey]}\n                          onChange={(e) =>\n                            setValues({ ...values, [column.accessorKey]: e.target.value })\n                          }\n                          fullWidth\n                        >\n                          <MenuItem value=\"\" style={{ color: 'grey' }}>\n                            Select Condition\n                          </MenuItem>\n                          <MenuItem value=\"In Stock\">In Stock</MenuItem>\n                          <MenuItem value=\"Installation\">Installation</MenuItem>\n                          <MenuItem value=\"In Use\">In Use</MenuItem>\n                          <MenuItem value=\"Maintenance\">Maintenance</MenuItem>\n                          <MenuItem value=\"Recycled\">Recycled</MenuItem>\n                        </Select>\n                      </FormControl>\n                    ) : column.accessorKey === 'warranty' ? (\n                      <FormControl fullWidth>\n                        <InputLabel>SELECT WARRANTY</InputLabel>\n                        <Select\n                          value={values[column.accessorKey]}\n                          onChange={(e) =>\n                            setValues({ ...values, [column.accessorKey]: e.target.value })\n                          }\n                          fullWidth\n                        >\n                          <MenuItem value=\"\" style={{ color: 'grey' }}>\n                            Select Warranty\n                          </MenuItem>\n                          <MenuItem value={'1 Year'}>1 Year</MenuItem>\n                          <MenuItem value={'2 Years'}>2 Years</MenuItem>\n                          <MenuItem value={'3 Years'}>3 Years</MenuItem>\n                        </Select>\n                      </FormControl>\n                    ) : column.accessorKey === 'brand' ? (\n                      <FormControl fullWidth>\n                        <InputLabel>SELECT BRAND</InputLabel>\n                        <Select\n                          value={values[column.accessorKey]}\n                          onChange={(e) =>\n                            setValues({ ...values, [column.accessorKey]: e.target.value })\n                          }\n                          fullWidth\n                        >\n                          <MenuItem value=\"\" style={{ color: 'grey' }}>\n                            Select Brand\n                          </MenuItem>\n                          {brands.map((brand) => (\n                            <MenuItem key={brand.id} value={brand.name}>\n                              {brand.name}\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n                    ) : (\n                      <TextField\n                        label={column.header}\n                        name={column.accessorKey}\n                        type={column.type === 'number' ? 'number' : 'text'}\n                        value={values[column.accessorKey]}\n                        onChange={(e) => setValues({ ...values, [e.target.name]: e.target.value })}\n                      />\n                    )}\n                    {validationErrors[column.accessorKey] && (\n                      <FormHelperText>{validationErrors[column.accessorKey]}</FormHelperText>\n                    )}\n                  </FormControl>\n                ))}\n            </Stack>\n          </form>\n        </DialogContent>\n        <DialogActions sx={{ p: '1.25rem' }}>\n          <Button onClick={onClose}>Cancel</Button>\n          <Button color=\"info\" onClick={handleSubmit} variant=\"contained\">\n            Create\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\nconst validateRequired = (value) => !!value.length\nconst validateEmail = (email) =>\n  !!email.length &&\n  email\n    .toLowerCase()\n    .match(\n      /^(([^<>()[\\]\\\\.,:\\s@\"]+(\\.[^<>()[\\]\\\\.,:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n    )\nconst validateAge = (age) => age >= 18 && age <= 50\n\nexport default Products\n"],"names":["CreateNewAccountModal","_ref15","open","columns","onClose","onSubmit","_useState17","useState","reduce","acc","column","_column$accessorKey","accessorKey","_useState18","_slicedToArray","values","setValues","_useState19","_useState20","brands","setBrands","useEffect","fetch","then","response","json","data","catch","error","console","_useState21","_useState22","isSuccess","setIsSuccess","_useState23","_useState24","hasErrors","setHasErrors","handleSubmit","_ref16","_asyncToGenerator","_regeneratorRuntime","mark","_callee5","errors","wrap","_context5","prev","next","forEach","includes","isNaN","Number","test","setValidationErrors","Object","keys","length","_column$accessorKey2","stop","apply","arguments","_useState25","_useState26","validationErrors","_jsxs","_Fragment","children","_jsx","CToast","autohide","visible","color","className","style","position","right","top","zIndex","CToastBody","CToastClose","white","Dialog","DialogTitle","textAlign","DialogContent","e","preventDefault","Stack","sx","width","minWidth","xs","sm","md","gap","filter","map","FormControl","fullWidth","InputLabel","Select","value","onChange","_objectSpread","_defineProperty","target","MenuItem","brand","name","id","TextField","label","header","type","FormHelperText","DialogActions","p","Button","onClick","variant","validateRequired","validateEmail","email","toLowerCase","match","validateAge","age","_useState","_useState2","createModalOpen","setCreateModalOpen","_useState3","_useState4","tableData","setTableData","_useState5","_useState6","_useState7","_useState8","isSuccessToastOpen","setIsSuccessToastOpen","_useState9","_useState10","navigate","useNavigate","fetchData","useCallback","_callee","_context","method","sent","ok","t0","validationSchema","Yup","shape","required","code","price","typeError","inStock","warranty","condition","_useState11","handleCreateNewRow","_ref2","_callee2","text","newProduct","newTableData","_context2","validate","abortEarly","headers","body","JSON","stringify","parse","concat","_toConsumableArray","log","_x","handleSaveRowEdits","_ref4","_callee3","_ref3","exitEditingMode","row","_context3","original","index","_x2","_useState13","_useState14","selectedRow","setSelectedRow","_useState15","_useState16","setVisible","handleDeleteRow","_callee4","_context4","splice","showDeleteToast","handleDeleteToastClose","getCommonEditTextFieldProps","cell","helperText","onBlur","event","columnDef","useMemo","enableColumnOrdering","enableEditing","enableSorting","size","muiTableBodyCellEditTextFieldProps","_ref6","render","_ref7","href","state","_ref8","_ref9","_ref10","_ref11","_ref12","_ref13","MaterialReactTable","displayColumnDefOptions","muiTableHeadCellProps","align","editingMode","onEditingRowSave","onEditingRowCancel","renderRowActions","_ref14","table","Box","display","Tooltip","arrow","placement","title","IconButton","setEditingRow","Edit","newCondition","Id","Name","Code","Brand","Price","InStock","Warranty","handleViewDetails","Visibility","Delete","product","qrData","generateQRCodeData","pdf","jsPDF","rows","autoTable","head","startY","save","downloadQRCode","VerticalAlignBottom","renderTopToolbarCustomActions","CModal","backdrop","CModalHeader","CModalTitle","CModalBody","CModalFooter","CButton"],"sourceRoot":""}