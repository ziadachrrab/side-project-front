{"version":3,"file":"static/js/24.ae3ba847.chunk.js","mappings":"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","sources":["views/pages/login/Login.js","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts","../node_modules/@coreui/icons/src/free/cil-user.ts"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardGroup,\n  CCol,\n  CContainer,\n  CForm,\n  CFormInput,\n  CInputGroup,\n  CInputGroupText,\n  CRow,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilLockLocked, cilUser } from '@coreui/icons'\n\nconst Login = () => {\n  const navigate = useNavigate()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [usernameError] = useState(false)\n  const [passwordError] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(() => {\n    if (localStorage.getItem('loggedIn')) {\n      navigate('/dashboard')\n    }\n  }, [navigate])\n\n  const handleLogin = (event) => {\n    event.preventDefault()\n\n    if (username === 'HH188206' && password === 'jack') {\n      console.log('Login successful')\n      localStorage.setItem('loggedIn', 'true')\n      navigate('/dashboard')\n    } else {\n      console.log('Invalid username or password')\n      setErrorMessage('Invalid username or password')\n    }\n\n    setUsername('')\n    setPassword('')\n  }\n\n  return (\n    <div\n      style={{ backgroundColor: '#f5f5f5' }}\n      className=\"bg-light min-vh-100 d-flex flex-row align-items-center\"\n    >\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md={4}>\n            <CCardGroup>\n              <CCard className=\"p-4\">\n                <CCardBody>\n                  <CForm onSubmit={handleLogin}>\n                    <h1>Login</h1>\n                    <p className=\"text-medium-emphasis\">Sign In to your account</p>\n                    <CInputGroup className=\"mb-3\">\n                      <CInputGroupText>\n                        <CIcon icon={cilUser} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"text\"\n                        placeholder=\"Username\"\n                        autoComplete=\"username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        className={usernameError ? 'is-invalid' : ''}\n                        required\n                      />\n                      {usernameError && (\n                        <div className=\"invalid-feedback\">Username is required.</div>\n                      )}\n                    </CInputGroup>\n                    <CInputGroup className=\"mb-4\">\n                      <CInputGroupText>\n                        <CIcon icon={cilLockLocked} />\n                      </CInputGroupText>\n                      <CFormInput\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        autoComplete=\"current-password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        className={passwordError ? 'is-invalid' : ''}\n                        required\n                      />\n                      {passwordError && (\n                        <div className=\"invalid-feedback\">Password is required.</div>\n                      )}\n                    </CInputGroup>\n                    {errorMessage && <div className=\"text-danger mb-3\">{errorMessage}</div>}\n                    <CRow>\n                      <CCol xs={6}>\n                        <CButton\n                          type=\"submit\"\n                          color=\"success\"\n                          className=\"px-4\"\n                          style={{ marginLeft: '125pripx' }}\n                        >\n                          Login\n                        </CButton>\n                      </CCol>\n                    </CRow>\n                  </CForm>\n                </CCardBody>\n              </CCard>\n            </CCardGroup>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  )\n}\n\nexport default Login\n","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n","export var cilUser = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M411.6,343.656l-72.823-47.334,27.455-50.334A80.23,80.23,0,0,0,376,207.681V128a112,112,0,0,0-224,0v79.681a80.236,80.236,0,0,0,9.768,38.308l27.455,50.333L116.4,343.656A79.725,79.725,0,0,0,80,410.732V496H448V410.732A79.727,79.727,0,0,0,411.6,343.656ZM416,464H112V410.732a47.836,47.836,0,0,1,21.841-40.246l97.66-63.479-41.64-76.341A48.146,48.146,0,0,1,184,207.681V128a80,80,0,0,1,160,0v79.681a48.146,48.146,0,0,1-5.861,22.985L296.5,307.007l97.662,63.479h0A47.836,47.836,0,0,1,416,410.732Z' class='ci-primary'/>\"];\n"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","username","setUsername","_useState3","_useState4","password","setPassword","_useState5","usernameError","_useState7","passwordError","_useState9","_useState10","errorMessage","setErrorMessage","useEffect","localStorage","getItem","_jsx","style","backgroundColor","className","children","CContainer","CRow","CCol","md","CCardGroup","CCard","CCardBody","_jsxs","CForm","onSubmit","event","preventDefault","console","log","setItem","CInputGroup","CInputGroupText","CIcon","icon","cilUser","CFormInput","type","placeholder","autoComplete","value","onChange","e","target","required","cilLockLocked","xs","CButton","color","marginLeft"],"sourceRoot":""}