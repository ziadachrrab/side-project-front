{"version":3,"file":"static/js/154.6b970129.chunk.js","mappings":"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","sources":["views/transactions/sales/Sales.js"],"sourcesContent":["import {\n  cibCcMastercard,\n  cibCcStripe,\n  cibCcVisa,\n  cifBr,\n  cifCn,\n  cifFr,\n  cifGb,\n  cifHr,\n  cifIn,\n  cifMa,\n  cifPl,\n  cilPeople,\n} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\nimport {\n  CAvatar,\n  CCol,\n  CProgress,\n  CRow,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CTableHead,\n  CTableHeaderCell,\n  CTableRow,\n} from '@coreui/react'\nimport React from 'react'\nimport Prf from 'src/assets/images/prf.png'\n\nconst Sales = () => {\n  const getRandomPeriod = () => {\n    const startDate = new Date(Date.now() - Math.random() * 1000 * 60 * 60 * 24 * 365)\n    const endDate = new Date(startDate.getTime() + Math.random() * 1000 * 60 * 60 * 24 * 365)\n    const formattedStartDate = startDate.toDateString()\n    const formattedEndDate = endDate.toDateString()\n    return `${formattedStartDate} - ${formattedEndDate}`\n  }\n  const tableExample = [\n    {\n      avatar: { src: Prf, status: 'success' },\n      user: {\n        name: 'Ahmed Achrrab',\n        new: true,\n      },\n      country: { name: 'Morocco', flag: cifMa },\n      usage: {\n        value: 75,\n        period: getRandomPeriod(),\n        color: 'info',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n    },\n    {\n      avatar: { src: Prf, status: 'danger' },\n      user: {\n        name: 'Avram Tarasios',\n        new: false,\n      },\n      country: { name: 'Brazil', flag: cifBr },\n      usage: {\n        value: 22,\n        period: getRandomPeriod(),\n        color: 'info',\n      },\n      payment: { name: 'Visa', icon: cibCcVisa },\n      activity: '5 minutes ago',\n    },\n    {\n      avatar: { src: Prf, status: 'danger' },\n      user: {\n        name: 'Friderik Dávid',\n        new: true,\n      },\n      country: { name: 'Poland', flag: cifPl },\n      usage: {\n        value: 43,\n        period: getRandomPeriod(),\n        color: 'success',\n      },\n      payment: { name: 'Amex', icon: cibCcMastercard },\n      activity: 'Last week',\n    },\n    {\n      avatar: { src: Prf, status: 'success' },\n      user: {\n        name: 'Wáng Wěi',\n        new: true,\n      },\n      country: { name: 'China', flag: cifCn },\n      usage: {\n        value: 85,\n        period: getRandomPeriod(),\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n    },\n    {\n      avatar: { src: Prf, status: 'success' },\n      user: {\n        name: 'Ziad Achrrab ',\n        new: true,\n      },\n      country: { name: 'Morocco', flag: cifMa },\n      usage: {\n        value: 50,\n        period: getRandomPeriod(),\n        color: 'success',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n    },\n    {\n      avatar: { src: Prf, status: 'warning' },\n      user: { name: 'Quintin Ed' },\n      country: { name: 'India', flag: cifIn },\n      usage: {\n        value: 74,\n        period: getRandomPeriod(),\n        color: 'warning',\n      },\n      payment: { name: 'Stripe', icon: cibCcStripe },\n      activity: '1 hour ago',\n    },\n    {\n      avatar: { src: Prf, status: 'success' },\n      user: {\n        name: 'Emily Johnson',\n        new: true,\n      },\n      country: { name: 'Croatia', flag: cifHr },\n      usage: {\n        value: 40,\n        period: getRandomPeriod(),\n        color: 'warning',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n    },\n    {\n      avatar: { src: Prf, status: 'success' },\n      user: {\n        name: 'Daniel Rodriguez',\n        new: true,\n      },\n      country: { name: 'France', flag: cifFr },\n      usage: {\n        value: 90,\n        period: getRandomPeriod(),\n        color: 'danger',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n    },\n    {\n      avatar: { src: Prf, status: 'success' },\n      user: {\n        name: 'Ethan Davis',\n        new: true,\n      },\n      country: { name: 'United Kingdom', flag: cifGb },\n      usage: {\n        value: 60,\n        period: getRandomPeriod(),\n        color: 'primary',\n      },\n      payment: { name: 'Mastercard', icon: cibCcMastercard },\n    },\n  ]\n\n  return (\n    <>\n      <CRow>\n        <CCol xs>\n          <CTable align=\"middle\" className=\"mb-0 border\" hover responsive>\n            <CTableHead color=\"light\">\n              <CTableRow>\n                <CTableHeaderCell className=\"text-center\">\n                  <CIcon icon={cilPeople} />\n                </CTableHeaderCell>\n                <CTableHeaderCell>Client</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Country</CTableHeaderCell>\n                <CTableHeaderCell>Sales</CTableHeaderCell>\n                <CTableHeaderCell className=\"text-center\">Payment Method</CTableHeaderCell>\n              </CTableRow>\n            </CTableHead>\n            <CTableBody>\n              {tableExample.map((item, index) => (\n                <CTableRow v-for=\"item in tableItems\" key={index}>\n                  <CTableDataCell className=\"text-center\">\n                    <CAvatar size=\"md\" src={item.avatar.src} status={item.avatar.status} />\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    <div>{item.user.name}</div>\n                  </CTableDataCell>\n                  <CTableDataCell className=\"text-center\">\n                    <CIcon size=\"xl\" icon={item.country.flag} title={item.country.name} />\n                  </CTableDataCell>\n                  <CTableDataCell>\n                    <div className=\"clearfix\">\n                      <div className=\"float-start\">\n                        <strong>{item.usage.value}%</strong>\n                      </div>\n                      <div className=\"float-end\">\n                        <small className=\"text-medium-emphasis\">{item.usage.period}</small>\n                      </div>\n                    </div>\n                    <CProgress thin color={item.usage.color} value={item.usage.value} />\n                  </CTableDataCell>\n                  <CTableDataCell className=\"text-center\">\n                    <CIcon size=\"xl\" icon={item.payment.icon} />\n                  </CTableDataCell>\n                </CTableRow>\n              ))}\n            </CTableBody>\n          </CTable>\n        </CCol>\n      </CRow>\n    </>\n  )\n}\n\nexport default Sales\n"],"names":["getRandomPeriod","startDate","Date","now","Math","random","endDate","getTime","formattedStartDate","toDateString","formattedEndDate","concat","tableExample","avatar","src","Prf","status","user","name","new","country","flag","cifMa","usage","value","period","color","payment","icon","cibCcMastercard","cifBr","cibCcVisa","activity","cifPl","cifCn","cifIn","cibCcStripe","cifHr","cifFr","cifGb","_jsx","_Fragment","children","CRow","CCol","xs","_jsxs","CTable","align","className","hover","responsive","CTableHead","CTableRow","CTableHeaderCell","CIcon","cilPeople","CTableBody","map","item","index","CTableDataCell","CAvatar","size","title","CProgress","thin"],"sourceRoot":""}